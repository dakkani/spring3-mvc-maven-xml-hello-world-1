pipeline {
    agent any

    parameters {
        // Standard string parameter for branch name
        string(name: 'BRANCH', defaultValue: 'master', description: 'Git branch to build (without "origin/" prefix)')
        
        booleanParam(defaultValue: false, description: 'Build with Maven', name: 'mvn_build')
        booleanParam(defaultValue: false, description: 'Publish to Nexus', name: 'publish_to_nexus')
    }

    tools {
        maven "maven"
    }

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "13.233.66.167:8081/"
        NEXUS_REPOSITORY = "ncodeit-helloworld"
        NEXUS_CREDENTIAL_ID = "nexus_credentials"
    }

    stages {
        stage("Clone Code") {
            steps {
                script {
                    // Clone the source using the branch parameter
                    git branch: params.BRANCH, 
                         url: 'https://github.com/betawins/parametirize-job.git'
                }
            }
        }

        stage("Maven Build") {
            when {
                expression { params.mvn_build }
            }
            steps {
                sh 'mvn -Dmaven.test.failure.ignore clean package'
            }
        }

        stage("Publish to Nexus") {
            when {
                expression { params.publish_to_nexus }
            }
            steps {
                script {
                    pom = readMavenPom file: "pom.xml"
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}")
                    
                    if (filesByGlob.length == 0) {
                        error "No built artifacts found in target directory"
                    }

                    artifactPath = filesByGlob[0].path
                    echo "Uploading artifact: ${artifactPath}"
                    
                    nexusArtifactUploader(
                        nexusVersion: env.NEXUS_VERSION,
                        protocol: env.NEXUS_PROTOCOL,
                        nexusUrl: env.NEXUS_URL,
                        groupId: pom.groupId,
                        version: "${env.BUILD_NUMBER}",
                        repository: env.NEXUS_REPOSITORY,
                        credentialsId: env.NEXUS_CREDENTIAL_ID,
                        artifacts: [
                            [artifactId: pom.artifactId,
                             classifier: '',
                             file: artifactPath,
                             type: pom.packaging],
                            [artifactId: pom.artifactId,
                             classifier: '',
                             file: "pom.xml",
                             type: "pom"]
                        ]
                    )
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed - result: ${currentBuild.result}"
        }
        success {
            echo "Pipeline succeeded!"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}
